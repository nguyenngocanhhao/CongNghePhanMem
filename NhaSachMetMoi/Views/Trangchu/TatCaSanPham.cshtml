
@using NhaSachMetMoi.Models;
@using PagedList.Mvc;
@model PagedList.PagedList<Sach>

@{
    ViewBag.Title = "Tất cả sản phẩm";
    Layout = "~/Views/Shared/Layoutpage.cshtml";
    <script src="~/Content/homepage.js"></script>
    <link href="~/Content/Layoutpage.css" rel="stylesheet" />
}
<div class="slideshow-container">

    <div class="mySlides fade">
        <img src="https://theme.hstatic.net/1000363117/1000911694/14/ms_banner_img1.jpg?v=581" style="width:100%; height:320px">
    </div>

    <div class="mySlides fade">
        <img src="https://theme.hstatic.net/1000363117/1000911694/14/ms_banner_img2.jpg?v=581" style="width: 100%; height:320px">
    </div>

    <div class="mySlides fade">
        <img src="https://theme.hstatic.net/1000363117/1000911694/14/ms_banner_img3.jpg?v=581" style="width: 100%; height: 320px">
    </div>

    <a class="prev" onclick="plusSlides(-1)">❮</a>
    <a class="next" onclick="plusSlides(1)">❯</a>

    <div style="text-align:center">
        <span class="dot" onclick="currentSlide(1)"></span>
        <span class="dot" onclick="currentSlide(2)"></span>
        <span class="dot" onclick="currentSlide(3)"></span>
    </div>
</div>

<div class=" mt-5" style="background:#ffffff">
    <h2 class="text-center" style="display:flex;justify-content:center;background:#2e8b57;color:#fffacd ">Tất Cả Sản Phẩm</h2>
    <div class="sort-container" style="display: flex; justify-content: center; margin-bottom: 20px; padding: 10px">
        <select id="sortOptions" class="form-select" style="width: 200px; padding: 10px; margin-right: 10px;" onchange="sortProducts()">
            <option value="NameAsc" @(ViewBag.SortOrder == "NameAsc" ? "selected" : "")>Theo bảng chữ cái từ A-Z</option>
            <option value="NameDesc" @(ViewBag.SortOrder == "NameDesc" ? "selected" : "")>Theo bảng chữ cái từ Z-A</option>
            <option value="PriceAsc" @(ViewBag.SortOrder == "PriceAsc" ? "selected" : "")>Giá từ thấp tới cao</option>
            <option value="PriceDesc" @(ViewBag.SortOrder == "PriceDesc" ? "selected" : "")>Giá từ cao tới thấp</option>
            <option value="DiscountDesc" @(ViewBag.SortOrder == "DiscountDesc" ? "selected" : "")>% giảm giá cao nhất</option>
        </select>

        <select id="categoryOptions" class="form-select" style="width: 200px; padding: 10px;" onchange="sortProducts()">
            <option value="">Tất cả thể loại</option>
            @foreach (var category in ViewBag.CategoryList)
            {
                <option value="@category.MaTL" @(ViewBag.SelectedCategory == category.MaTL ? "selected" : "")>@category.TenTL</option>
            }
        </select>
    </div>




    <div class="book-must-try-container" id="productList">
        @foreach (var item in Model)
        {
            <div class="product-link product">
                <a href="@Url.Action("XemCT", "TrangChu", new { @masach = item.MaSach })" class="product-link">
                    <div class="product-image">
                        <img src="@Url.Content("~/Content/images/sach/" + item.AnhBia)" alt="Book Image" width="200" height="250">
                        @if (item.Sale > 0)
                        {
                            <div class="thumb-discount-label">
                                <span>@item.Sale%</span>
                            </div>
                        }
                    </div>
                    <div class="product-title1">
                        <span class="book-title">@item.TenSach</span>
                    </div>
                    <div class="product-price">
                        <b class="discounted-price">@string.Format("{0:0,0}", (decimal)item.Gia * (1 - (int)item.Sale / 100m)).Replace(",", ".") VNĐ</b>
                        @if (item.Sale > 0)
                        {
                            <del class="original-price">@string.Format("{0:0,0}", item.Gia).Replace(",", ".") VNĐ</del>
                        }
                    </div>
                </a>
                <div class="product-actions" style="padding: 10px; display: flex; justify-content: center;">
                    @using (Html.BeginForm("ThemGioHang", "GioHang", new { @iMaSach = item.MaSach, @strURL = Request.Url.ToString() }))
                    {
                        <button type="submit" class="btn btn-primary btn-sm action-button">
                            <i class="fas fa-cart-plus"></i> Thêm vào giỏ
                        </button>
                    }
                    @using (Html.BeginForm("MuaNgay", "GioHang", new { @iMaSach = item.MaSach, @strURL = Request.Url.ToString() }))
                    {
                        <button type="submit" class="btn btn-primary btn-sm action-button">
                            <i class="fas fa-shopping-bag"></i> Mua ngay
                        </button>
                    }
                </div>
            </div>
        }

    </div>
    <div class="pagination-container" style="display: flex; justify-content: center; margin-top: 20px;">
        @Html.PagedListPager(Model, page => Url.Action("TatCaSanPham", new { page, sortOrder = ViewBag.SortOrder }), PagedListRenderOptions.Classic)
    </div>

</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<style>
    .product-title1 {
        font-family: 'play_fair';
        font-size: 20px; /* Giảm kích thước font */
        
        margin-top: 10px;
        color: #333; /* Màu sắc để dễ đọc hơn */
        display: -webkit-box; /* Sử dụng -webkit-box để hiển thị phần tử dưới dạng hộp */
        -webkit-line-clamp: 2; /* Giới hạn tối đa 2 dòng */
        -webkit-box-orient: vertical; /* Định hướng hộp theo chiều dọc */
        overflow: hidden; /* Cắt phần tràn ra ngoài */
        text-overflow: ellipsis; /* Hiển thị dấu "..." nếu văn bản bị cắt */
        line-height: 1.2em; /* Điều chỉnh chiều cao dòng */
        max-height: 2.4em; /* Đảm bảo chiều cao tối đa cho hai dòng */
    }

    .action-button {
        
        width: 120px;
        margin: 5px;
        padding: 5px;
        text-align: center;
        font-size: 14px;
        background: #2e8b57;
        color: #FFFACD;
    }

        .action-button:hover {
            background: #FFFFFF;
            color: #2e8b57;
        }
</style>
<script>
   

        function sortProducts() {
        var sortOption = document.getElementById("sortOptions").value;
        var categoryOption = document.getElementById("categoryOptions").value;

        // Chuyển hướng sang controller với giá trị sắp xếp và thể loại
        window.location.href = '@Url.Action("TatCaSanPham", "TrangChu")' + '?sortOrder=' + sortOption + '&category=' + categoryOption;
    }
 
</script>
<script>
    let slideIndex = 1;
    showSlides(slideIndex);

    function plusSlides(n) {
        showSlides(slideIndex += n);
    }

    function currentSlide(n) {
        showSlides(slideIndex = n);
    }

    function showSlides(n) {
        let i;
        let slides = document.getElementsByClassName("mySlides");
        let dots = document.getElementsByClassName("dot");
        if (n > slides.length) { slideIndex = 1 }
        if (n < 1) { slideIndex = slides.length }
        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
        }
        for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" active", "");
        }
        slides[slideIndex - 1].style.display = "block";
        dots[slideIndex - 1].className += " active";

        slideIndex++;
        if (slideIndex > slides.length) { slideIndex = 1 }
        setTimeout(() => showSlides(slideIndex), 10000);
    }
</script>


